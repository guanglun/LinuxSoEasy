# SPDX-License-Identifier: GPL-2.0-only OR BSD-2-Clause
%YAML 1.2
---
$id: "http://devicetree.org/schemas/phy/phy-stm32-usbphyc.yaml#"
$schema: "http://devicetree.org/meta-schemas/core.yaml#"

title: STMicroelectronics STM32 USB HS PHY controller binding

description:

  The STM32 USBPHYC block contains a dual port High Speed UTMI+ PHY and a UTMI
  switch. It controls PHY configuration and status, and the UTMI+ switch that
  selects either OTG or HOST controller for the second PHY port. It also sets
  PLL configuration.

  USBPHYC
  |_ PLL
  |
  |_ PHY port#1 _________________ HOST controller
  |                   __                 |
  |                  / 1|________________|
  |_ PHY port#2 ----|   |________________
  |                  \_0|                |
  |_ UTMI switch_______|          OTG controller

maintainers:
  - Amelie Delaunay <amelie.delaunay@st.com>

properties:
  compatible:
    enum:
      - st,stm32mp1-usbphyc

  reg:
    maxItems: 1

  clocks:
    maxItems: 1

  '#address-cells':
    const: 1

  '#size-cells':
    const: 0

  vdda1v1-supply:
    description: regulator providing 1V1 power supply to the PLL block

  vdda1v8-supply:
    description: regulator providing 1V8 power supply to the PLL block

  '#clock-cells':
    description: number of clock cells for ck_usbo_48m consumer
    const: 0

#Required child nodes:

patternProperties:
  "^usb-phy@[0|1]$":
    type: object
    description:
      Each port the controller provides must be represented as a sub-node.

    properties:
      reg:
        description: phy port index.
        maxItems: 1

      phy-supply:
        description: regulator providing 3V3 power supply to the PHY.

      vbus-supply:
        description: regulator providing 5V Vbus to the USB connector.

      st,phy-tuning:
        $ref: /schemas/types.yaml#definitions/phandle
        description:
          It can be necessary to adjust the PHY settings to compensate parasitics, which can be due
          to USB connector/receptacle, routing, ESD protection component,... Here is the list of
          all optional parameters to tune the interface of the PHY (HS for High-Speed, FS for Full-
          Speed, LS for Low-Speed)
            * st,current-boost, <1> current boosting of 1mA
                                <2> current boosting of 2mA
            * st,no-lsfs-fb-cap, disables the LS/FS feedback capacitor
            * st,hs-slew-ctrl, slows the HS driver slew rate by 10%
            * st,hs-dc-level, <0> decreases the HS driver DC level by 5 to 7mV
                              <1> increases the HS driver DC level by 5 to 7mV
                              <2> increases the HS driver DC level by 10 to 14mV
            * st,fs-rftime-tuning, enables the FS rise/fall tuning option
            * st,hs-rftime-reduction, enables the HS rise/fall reduction feature
            * st,hs-current-trim, controls HS driver current trimming for choke
            * st,hs-impedance-trim, controls HS driver impedance tuning for choke
            * st,squelch-level, adjusts the squelch DC threshold value
            * st,hs-rx-gain-eq, enables the HS Rx gain equalizer
            * st,hs-rx-offset, adjusts the HS Rx offset
            * st,no-hs-ftime-ctrl, disables the HS fall time control of single ended signals
                                   during pre-emphasis
            * st,no-lsfs-sc, disables the short circuit protection in LS/FS driver
            * st,hs-tx-staggering, enables the basic staggering in HS Tx mode

      '#phy-cells':
        enum: [ 0x0, 0x1 ]

    allOf:
      - if:
          properties:
            reg:
              const: 0
        then:
          properties:
            '#phy-cells':
              const: 0
        else:
          properties:
            '#phy-cells':
              const: 1
              description:
                The value is used to select UTMI switch output.
                0 for OTG controller and 1 for Host controller.

    required:
      - reg
      - phy-supply
      - '#phy-cells'

required:
  - compatible
  - reg
  - clocks
  - '#address-cells'
  - '#size-cells'
  - vdda1v1-supply
  - vdda1v8-supply
  - '#clock-cells'
  - usb-phy@0
  - usb-phy@1

examples:
  - |
    #include <dt-bindings/clock/stm32mp1-clks.h>
    #include <dt-bindings/reset/stm32mp1-resets.h>

    usb_phy_tuning: usb-phy-tuning {
        st,hs-dc-level = <2>;
        st,fs-rftime-tuning;
        st,hs-rftime-reduction;
        st,hs-current-trim = <15>;
        st,hs-impedance-trim = <1>;
        st,squelch-level = <3>;
        st,hs-rx-offset = <2>;
        st,no-lsfs-sc;
    };

    usbphyc: usbphyc@5a006000 {
        compatible = "st,stm32mp1-usbphyc";
        reg = <0x5a006000 0x1000>;
        clocks = <&rcc_clk USBPHY_K>;
        resets = <&rcc_rst USBPHY_R>;
        vdda1v1-supply = <&reg11>;
        vdda1v8-supply = <&reg18>;
        #address-cells = <1>;
        #size-cells = <0>;
        #clock-cells = <0>;

        usbphyc_port0: usb-phy@0 {
            reg = <0>;
            phy-supply = <&vdd_usb>;
            #phy-cells = <0>;
            st,phy-tuning = <&usb_phy_tuning>;
        };

        usbphyc_port1: usb-phy@1 {
            reg = <1>;
            phy-supply = <&vdd_usb>;
            #phy-cells = <1>;
            st,phy-tuning = <&usb_phy_tuning>;
        };
    };
...
